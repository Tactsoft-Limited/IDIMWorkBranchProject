@using IDIMWorkBranchProject.Extentions
@using IDIMWorkBranchProject.Models.WBP
@model ProjectSearchVm
@{
    ViewBag.Title = "Project";
}

<div class='col-xs-12'>
    <div class="page-title">
        <div class="pull-left">
            <h1 class="title">Project</h1>
        </div>
        <div class="pull-right hidden-xs">
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index","Dashboard")"><i class="fa fa-home"></i>Dashboard</a>
                </li>
                <li class="active">
                    <strong>Project</strong>
                </li>
            </ol>
        </div>
    </div>
</div>
<div class="clearfix"></div>

<div class="col-lg-12">
    <section class="box ">
        <header class="panel_header">
            <h2 class="title pull-left">List</h2>
            <div class="actions panel_actions pull-right">
                <a href="@Url.Action("Create","Project")" class="btn btn-success">Create New</a>
                <a class="box_toggle fa fa-chevron-down"></a>
            </div>
        </header>
        <div class="content-body">
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ProjectTypeId, new { @class = "col-md-4 form-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.ProjectTypeId, Model.ProjectTypeDropdown, "Select Unit", new { @class = "select2" })
                        @Html.ValidationMessageFor(model => model.ProjectTypeId)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.FiscalYearId, new { @class = "col-md-4 form-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.FiscalYearId, Model.FiscalYearDropdown, "Select Fiscal Year", new { @class = "select2" })
                        @Html.ValidationMessageFor(model => model.FiscalYearId)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.StartingDate, new { @class = "col-md-4 form-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.StartingDate, new { @class = "form-control datepacker" })
                        @Html.ValidationMessageFor(model => model.StartingDate)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.EndingDate, new { @class = "col-md-4 form-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.EndingDate, new { @class = "form-control datepacker" })
                        @Html.ValidationMessageFor(model => model.EndingDate)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ProjectName, new { @class = "col-md-4 form-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectName)
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-xs-12">
                    <table id="projectTable" class="table table-striped table-bordered" width="100%" cellspacing="0">
                    </table>
                </div>
            </div>
        </div>
    </section>
</div>


@section scripts {

    <script>
        $(document).ready(function () {
            var table = $('#projectTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "/Project/LoadData",  // Make sure this is correct
                    "type": "POST",
                    "contentType": "application/json",  // Sending JSON data
                    "data": function (d) {
                        // Manually create a JSON object for the POST request
                        return JSON.stringify({
                            SearchValue: d.search.value,  // Global search term
                            ProjectName: $('#ProjectName').val(),  // Custom project name filter
                            StartingDate: $('#StartingDate').val() ? $('#StartingDate').val() : null,  // Handle null dates
                            EndingDate: $('#EndingDate').val() ? $('#EndingDate').val() : null,  // Handle null dates
                            ProjectTypeId: $('#ProjectTypeId').val(),  // Firm filter
                            FiscalYearId: $('#FiscalYearId').val(),  // Firm filter
                            Draw: d.draw,
                            PageIndex: d.start,  // Pagination: starting index
                            PageSize: d.length,  // Pagination: number of records per page
                            SortColumn: d.order[0] ? d.columns[d.order[0].column].data : 'ProjectId',  // Sorting column
                            SortDirection: d.order[0] ? d.order[0].dir : 'asc'  // Sorting direction
                        });
                    },
                    "dataSrc": function (json) {
                        console.log(this.data)
                        return json.data;  // DataTables expects data in the 'data' property
                    }
                },
                "columns": [
                    { "data": "ProjectId", "title": "ProjectId", "visible": false },
                    { "data": "ProjectName", "title": "Project Name" },
                    {
                        "data": "StartingDate",
                        "title": "Start Date",
                        "render": function (data) {
                            if (data && data.startsWith("/Date(")) {
                                var timestamp = parseInt(data.replace("/Date(", "").replace(")/", ""));
                                return new Date(timestamp).toLocaleDateString('en-GB');
                            }
                            return '';
                        }
                    },
                    {
                        "data": "EndingDate",
                        "title": "End Date",
                        "render": function (data) {
                            if (data && data.startsWith("/Date(")) {
                                var timestamp = parseInt(data.replace("/Date(", "").replace(")/", ""));
                                return new Date(timestamp).toLocaleDateString('en-GB');
                            }
                            return '';
                        }
                    },
                    { "data": "ProjectTypeId", "title": "ProjectTypeId", "visible": false },
                    { "data": "ProjectTypeName", "title": "Project Type" },
                    { "data": "FiscalYearId", "title": "FiscalYearId", "visible": false },
                    { "data": "FiscalYearDescription", "title": "Fiscal Year" },
                    {
                        "data": "ProjectId",  // You can use ProjectId to generate action buttons
                        "title": "Actions",
                        "render": function (data, type, row) {
                            return `
                        <a href="/ReceivePayment/Create?id=${row.ProjectId}">
                            <span class="label label-info"><i class="fa fa-info"></i> Receive Payment</span>
                        </a>
                        <a href="/Project/Edit?id=${row.ProjectId}">
                            <span class="label label-primary"><i class="fa fa-edit"></i> Edit</span>
                        </a>
                        <a href="/Project/Delete?id=${row.ProjectId}">
                            <span class="label label-danger"><i class="fa fa-remove"></i> Remove</span>
                        </a>`;
                        }
                    }
                ]
            });

            // Apply filters automatically when the user changes any of the filter fields
            $('#ProjectName, #StartingDate, #EndingDate, #FiscalYearId, #ProjectTypeId').on('change input keyup', function () {
                table.ajax.reload();
            });
        });

    </script>

}
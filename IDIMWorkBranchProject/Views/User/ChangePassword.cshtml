@model IDIMWorkBranchProject.Models.User.ChangePasswordVm
@{

    ViewBag.Title = "User Password Change";
}

<div class='col-xs-12'>
    <div class="page-title">

        <div class="pull-left">
            <h1 class="title">User</h1>
        </div>

        <div class="pull-right hidden-xs">
            <ol class="breadcrumb">
                <li>
                    <a href="#"><i class="fa fa-home"></i>Dashboard</a>
                </li>
                <li>
                    <a href="@Url.Action("List","User")">
                        <i class="fa fa-list" aria-hidden="true"></i>
                        User
                    </a>
                </li>
                <li class="active">
                    <strong>Create</strong>
                </li>
            </ol>
        </div>

    </div>
</div>
<div class="clearfix"></div>

<div class="col-lg-12">
    <section class="box ">
        <header class="panel_header">
            <h2 class="title pull-left">Create</h2>
            <div class="actions panel_actions pull-right">
                <a href="@Url.Action("List","User")" class="btn">
                    <i class="fa fa-list" aria-hidden="true"></i>
                    List
                </a>
                <a class="box_toggle fa fa-chevron-down"></a>
            </div>
        </header>
        <div class="content-body">
            <div class="row">
                <div class="col-xs-12">


                    @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model=>model.UserId)

                        <div class="form-group">
                            @Html.LabelFor(m => m.Username, new { @class = "col-md-2 form-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Username , new {@class="form-control", @readonly="readonly"})
                                @Html.ValidationMessageFor(model => model.Username)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 form-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 form-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NewPassword)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ReNewPassword, new { @class = "col-md-2 form-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.ReNewPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ReNewPassword)
                            </div>
                        </div>
                       
                        <div class="pull-right">
                            <input type="submit" class="btn btn-success" value="Save" />
                            <input type="reset" class="btn" value="Clear" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>


@section scripts{
    <script>
        $("#ArmyId").select2({
            placeholder: "Search Regiment",
            minimumInputLength:3,
            ajax: {
                url: '@Url.Action("Get", "GeneralInformation")',
                dataType: 'json',
                quietMillis: 250,
                data: function (param) {
                    return { term: param };
                },
                results: function (data) {
                    return { results: data.Results };
                }
            }
        });

    </script>
}





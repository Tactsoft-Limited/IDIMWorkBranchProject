@using IDIMWorkBranchProject.Extentions
@using IDIMWorkBranchProject.Models.Wbpm
@model ConstructionCompanySearchVm

@{
    ViewBag.Title = "List";
}


<div class="page-title">
    <div class="pull-left">
        <h3 class="title">ঠিকাদারী প্রতিষ্ঠান</h3>
    </div>
    <div class="pull-right hidden-xs">
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index","Dashboard")"><i class="fa fa-home"></i>Dashboard</a>
            </li>
            <li class="active">
                <strong>Construction Company</strong>
            </li>
        </ol>
    </div>
</div>

<section class="box">
    <header class="panel_header">
        <h2 class="title pull-left">ঠিকাদারী প্রতিষ্ঠান তালিকা</h2>
        <div class="actions panel_actions pull-right">
            <a href="@Url.Action("Create","ConstructionCompany")" class="btn btn-success"><i class="fa fa-plus"></i> Create New</a>
            <a class="box_toggle fa fa-chevron-down"></a>
        </div>
    </header>
    <div class="content-body">

        <div class="row">
            <div class="col-xs-12">
                <table id="constructionCompanyTable" class="table table-striped table-bordered" width="100%" cellspacing="0">
                </table>
            </div>
        </div>

        @Html.Partial("_ModalRemove")
    </div>
</section>


@section scripts {

    <script>
        $(document).ready(function () {
            var table = $('#constructionCompanyTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": baseUrl + "/ConstructionCompany/LoadData",  // Make sure this is correct
                    "type": "POST",
                    "contentType": "application/json",  // Sending JSON data
                    "data": function (d) {
                        // Manually create a JSON object for the POST request
                        return JSON.stringify({
                            SearchValue: d.search.value,  // Global search term
                            Draw: d.draw,
                            PageIndex: d.start / d.length,  // Pagination: starting index
                            PageSize: d.length,  // Pagination: number of records per page
                            SortColumn: d.order[0] ? d.columns[d.order[0].column].data : 'ConstructionCompanyId',
                            SortDirection: d.order[0] ? d.order[0].dir : 'asc'
                        });
                    },
                    "dataSrc": function (json) {
                        console.log(json.data)
                        return json.data;
                    }
                },
                "columns": [
                    { "data": "ConstructionCompanyId", "title": "আইডি", "visible": false },
                    { "data": "FirmName", "title": "ফার্মের নাম" },
                    { "data": "Owner", "title": "স্বত্বাধিকারী" },
                    { "data": "AuthorizedPerson", "title": "অনুমোদিত ব্যক্তি" },
                    { "data": "LicenceNumber", "title": "লাইসেন্স নম্বর" },
                    { "data": "LicensingOrganization", "title": "প্রদানকারী প্রতিষ্ঠান" },
                    { "data": "LicenceCategory", "title": "ক্যাটাগরি" },
                    { "data": "AccountNumber", "title": "হিসাব নাম্বার" },
                    {
                        data: "ExpiryDate",
                        title: "মেয়াদ শেষ",
                        render: function (data, type, row) {
                            if (!data) return '';

                            const expiry = new Date(data);
                            const today = new Date();
                            const diffDays = Math.ceil((expiry - today) / (1000 * 60 * 60 * 24));

                            // Alert condition: within 30 days
                            if (diffDays <= 30 && diffDays >= 0) {
                                return `<span class="text-danger" title="মেয়াদ শেষ হতে ${diffDays} দিন বাকি!">
                                ${expiry.toLocaleDateString()}
                                <span class="badge badge-danger">${diffDays} days left to expire!</span></span>`;
                            }

                            return expiry.toLocaleDateString();
                        }
                    },
                    {
                        "data": "Action",  // You can use ProjectId to generate action buttons
                        "title": "অ্যাকশন",
                        "width": "115px",
                        "orderable": false,
                        "render": function (data, type, row) {
                            return `
                            <a href="${baseUrl}/ConstructionCompany/Details?id=${row.ConstructionCompanyId}" class="btn btn-xs btn-primary"><i class="fa fa-eye"></i> View</a>
                            <a href="${baseUrl}/ConstructionCompany/Edit?id=${row.ConstructionCompanyId}" class="btn btn-xs btn-primary"><i class="fa fa-edit"></i> Edit</a>
                            <a class="btn btn-danger btn-xs removeModal" data-id='${row.ConstructionCompanyId}' data-entity='ConstructionCompany' data-toggle="modal" data-target="#modalRemove" value='${row.ConstructionCompanyId}'>
                            <i class="fa fa-trash"></i> Remove </a>`;
                        }
                    }
                ]
            });

            // Apply filters automatically when the user changes any of the filter fields
            $('#ProjectName, #StartingDate, #EndingDate, #FiscalYearId, #ProjectTypeId').on('change input keyup', function () {
                table.ajax.reload();
            });
        });

    </script>

}


@model IDIMWorkBranchProject.Models.WBP.ContractorPaymentVm
@{
    ViewBag.Title = "Contractor Payment";
}

<div id="message"></div>
<div class='col-md-12'>
    <div class="page-title">
        <div class="pull-left">
            <h1 class="title">Contractor Payment </h1>
        </div>
        <div class="pull-right hidden-xs">
            <ol class="breadcrumb">
                <li>
                    <a href="#"><i class="fa fa-home"></i>Dashboard</a>
                </li>
                <li>
                    <a href="@Url.Action("List","ContractorPayment")">
                        <i class="fa fa-list" aria-hidden="true"></i>
                        Contractor Payment
                    </a>
                </li>
                <li class="active">
                    <strong>Create</strong>
                </li>
            </ol>
        </div>
    </div>
</div>
<div class="clearfix"></div>

<div class="col-lg-12">
    <section class="box">
        <header class="panel_header">
            <h2 class="title pull-left">Create</h2>
            <div class="actions panel_actions pull-right">
                <a href="@Url.Action("List","ContractorPayment")" class="btn">
                    <i class="fa fa-list" aria-hidden="true"></i>
                    List
                </a>
                <a class="box_toggle fa fa-chevron-down"></a>
            </div>
        </header>
        <div class="content-body">
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm("Create", "ContractorPayment", FormMethod.Post, new { @class = "form-horizontal", id = "ContractorPayment-create-form", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.SubProjectId)
                        @Html.HiddenFor(m => m.SubProjectTitle)
                        @Html.HiddenFor(m => m.ConstructionFirmId)
                        @Html.HiddenFor(m => m.ConstructionFirmName)

                        <div class="row">
                            <div class="form-group col-md-12">
                                @Html.LabelFor(m => m.SubProjectTitle, new { @class = "col-md-2 form-label" })
                                <div class="col-md-10">
                                    @Html.DisplayFor(m => m.SubProjectTitle, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SubProjectTitle)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ConstructionFirmName, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.DisplayFor(m => m.ConstructionFirmName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ConstructionFirmName)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ApprovalAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ApprovalAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApprovalAmount)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.TaxPer, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.TaxPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TaxPer)
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.VatPer, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.VatPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VatPer)
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.CollateralPer, new { @class = "col-md-5 form-label" })
                                <div class="col-md-7">
                                    @Html.TextBoxFor(m => m.CollateralPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CollateralPer)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.VatTaxSecurityAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.VatTaxSecurityAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VatTaxSecurityAmount)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.NetAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.NetAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NetAmount)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ProgressPer, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ProgressPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProgressPer)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ProgressAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ProgressAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProgressAmount)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.ProgressTaxPer, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ProgressTaxPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProgressTaxPer)
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.ProgressVatPer, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ProgressVatPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProgressVatPer)
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(m => m.ProgressCollateralPer, new { @class = "col-md-5 form-label" })
                                <div class="col-md-7">
                                    @Html.TextBoxFor(m => m.ProgressCollateralPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProgressCollateralPer)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.DeductionAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.DeductionAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DeductionAmount)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.NetDeductionAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.NetDeductionAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NetDeductionAmount)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.PerformanceSecurityPer, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.PerformanceSecurityPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PerformanceSecurityPer)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.PerformanceSecurityAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.PerformanceSecurityAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PerformanceSecurityAmount)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ContactorProgressPer, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ContactorProgressPer, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ContactorProgressPer)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ContactorProgressAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ContactorProgressAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ContactorProgressAmount)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.BillPaymentNumber, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.BillPaymentNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BillPaymentNumber)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ContactorDepositAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ContactorDepositAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ContactorDepositAmount)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.RunningBillPayment, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.RunningBillPayment, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RunningBillPayment)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.BGBFundDepositAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.BGBFundDepositAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BGBFundDepositAmount)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ContactorFinalPaymentAmount, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ContactorFinalPaymentAmount, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ContactorFinalPaymentAmount)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.Remarks, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Remarks)
                                </div>
                            </div>
                        </div>

                        <div class="pull-right">
                            <input type="submit" class="btn btn-success" value="Save" />
                            <input type="reset" class="btn" value="Clear" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>



@section scripts{

    <script type="text/javascript">// Wait until the DOM is fully loaded
        $(document).ready(function () {
            // Function to calculate the amounts
            function calculateSecurityAmounts() {
                // Get values from the form
                var approvalAmount = parseFloat($('#ApprovalAmount').val()) || 0;  // Get receiveAmount value
                var vatPer = parseFloat($('#VatPer').val()) || 0;  // Get VAT percentage
                var taxPer = parseFloat($('#TaxPer').val()) || 0;  // Get Tax percentage
                var collateralPer = parseFloat($('#CollateralPer').val()) || 0;  // Get Collateral percentage

                // Calculate amounts based on the input
                var vatAmount = Math.round(approvalAmount * (vatPer / 100));  // Calculate VAT amount
                var taxAmount = Math.round(approvalAmount * (taxPer / 100));  // Calculate Tax amount
                var collateralAmount = Math.round(approvalAmount * (collateralPer / 100));  // Calculate Collateral amount

                // Sum up all amounts
                var totalSecurityAmount = vatAmount + taxAmount + collateralAmount;
                var netSecurityAmount = approvalAmount - totalSecurityAmount

                // Set calculated amounts in the corresponding fields
                $('#VatTaxSecurityAmount').val(totalSecurityAmount.toFixed(2));
                $('#NetAmount').val(netSecurityAmount.toFixed(2));

            }

            function calculateProgressSecurityAmounts() {
                var progressAmount = parseFloat($('#ProgressAmount').val()) || 0;  // Get receiveAmount value
                var progressVatPer = parseFloat($('#ProgressVatPer').val()) || 0;  // Get VAT percentage
                var progressTaxPer = parseFloat($('#ProgressTaxPer').val()) || 0;  // Get Tax percentage
                var progressCollateralPer = parseFloat($('#ProgressCollateralPer').val()) || 0;  // Get Collateral percentage

                var progressVatAmount = Math.round(progressAmount * (progressVatPer / 100));  // Calculate VAT amount
                var progressTaxAmount = Math.round(progressAmount * (progressTaxPer / 100));  // Calculate Tax amount
                var progressCollateralAmount = Math.round(progressAmount * (progressCollateralPer / 100));  // Calculate Collateral amount

                // Sum up all amounts
                var totalProgressSecurityAmount = progressVatAmount + progressTaxAmount + progressCollateralAmount;
                var netProgressSecurityAmount = progressAmount - totalProgressSecurityAmount

                // Set calculated amounts in the corresponding fields
                $('#DeductionAmount').val(totalProgressSecurityAmount.toFixed(2));
                $('#NetDeductionAmount').val(netProgressSecurityAmount.toFixed(2));

            }

            // Bind the calculateAmounts function to input fields' keyup and change events
            $('#ApprovalAmount, #VatPer, #TaxPer, #CollateralPer').on('input', function () {
                calculateSecurityAmounts();
            });

            // Bind the calculateAmounts function to input fields' keyup and change events
            $('#ProgressAmount, #ProgressVatPer, #ProgressTaxPer, #ProgressCollateralPer').on('input', function () {
                calculateProgressSecurityAmounts();
            });

            // Initial calculation when page is loaded (in case the fields are pre-filled)
            calculateSecurityAmounts();
            calculateProgressSecurityAmounts();
        });</script>
}
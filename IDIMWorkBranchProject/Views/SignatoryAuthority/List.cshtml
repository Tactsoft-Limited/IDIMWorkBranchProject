@model IDIMWorkBranchProject.Models.WBP.SignatoryAuthoritySearchVm
@{
    ViewBag.Title = "Sub Project";
}

<div class='col-md-12'>
    <div class="page-title">
        <div class="pull-left">
            <h1 class="title">Signatory Authority</h1>
        </div>
        <div class="pull-right hidden-xs">
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index","Dashboard")"><i class="fa fa-home"></i>Dashboard</a>
                </li>
                <li class="active">
                    <strong>Signatory Authority</strong>
                </li>
            </ol>
        </div>
    </div>
</div>
<div class="clearfix"></div>

<div class="col-lg-12">
    <section class="box ">
        <header class="panel_header">
            <h2 class="title pull-left">List</h2>
            <div class="actions panel_actions pull-right">
                <a class="box_toggle fa fa-chevron-down"></a>
            </div>
        </header>
        <div class="content-body">

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ProjectName, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectName)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.LetterNumber, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.LetterNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LetterNumber)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.AuthorityName, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(m => m.AuthorityName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AuthorityName)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ProjectId, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.ProjectId, Model.ProjectDropdown, "Select Project", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId)
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.ReceivePaymentId, new { @class = "col-md-4 control-label" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(m => m.ReceivePaymentId, Model.ReceivePaymentDropdown, "Select Firm", new { @class = "select2" })
                        @Html.ValidationMessageFor(model => model.ReceivePaymentId)
                    </div>
                </div>

                <div class="text-right">
                    <div class="form-group">
                        <button type="button" id="resetButton" class="btn btn-secondary">Reset Filter</button>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <table id="signatoryAuthorityTable" class="table table-bordered" width="100%">
                    </table>

                </div>
            </div>
        </div>
    </section>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            var table = $('#signatoryAuthorityTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "/SignatoryAuthority/LoadData",  // Make sure the URL is correct
                    "type": "POST",
                    "contentType": "application/json",  // Sending JSON data
                    "data": function (d) {
                        return JSON.stringify({
                            SearchValue: d.search.value,
                            ProjectName: $('#ProjectName').val(),
                            LetterNumber: $('#LetterNumber').val(),
                            AuthorityName: $('#AuthorityName').val(),
                            ProjectId: $('#ProjectId').val(),
                            ReceivePaymentId: $('#ReceivePaymentId').val(),
                            Draw: d.draw,
                            PageIndex: d.start / d.length,
                            PageSize: d.length,
                            SortColumn: d.order[0] ? d.columns[d.order[0].column].data : 'SignatoryAuthorityId',
                            SortDirection: d.order[0] ? d.order[0].dir : 'asc'
                        });
                    },
                    "dataSrc": function (json) {
                        console.log(json.data);  // Check if data is returned here
                        return json.data;  // Return the filtered data to DataTable
                    }
                },
                "columns": [
                    { "data": "SignatoryAuthorityId", "title": "SignatoryAuthorityId", "visible": false },  // Hide the ProjectId column
                    { "data": "ProjectName", "title": "Project Name" },
                    { "data": "ReceivePaymentId", "title": "ReceivePaymentId", "visible": false },
                    { "data": "ProjectId", "title": "ProjectId", "visible": false },
                    { "data": "LetterNumber", "title": "Letter Number" },
                    { "data": "AuthorityName", "title": "Authority Name" },
                    { "data": "Designation", "title": "Designation" },
                    {
                        "data": "SignatoryAuthorityId",  // You can use SubProjectId to generate action buttons
                        "title": "Actions",
                        "render": function (data, type, row) {
                            // Generate action buttons dynamically for each row
                            return `
                                    <a href="/SignatoryAuthority/Edit?id=${row.SubProjectId}">
                                        <span class="label label-primary"><i class="fa fa-edit"></i> Edit</span>
                                    </a>
                                    <a href="/SignatoryAuthority/Delete?id=${row.SubProjectId}">
                                        <span class="label label-danger"><i class="fa fa-remove"></i> Remove</span>
                                    </a>
                                `;
                        }
                    }

                ]
            });

            // Apply filters automatically when the user changes any of the filter fields
            $('#ProjectName, #ConstructionFirmName, #LetterNo, #BillDate, #ProjectId, #ConstructionFirmId').on('change input keyup', function () {
                table.ajax.reload();
            });

            // Reset button click handler
            $("#resetButton").click(function () {
                // Clear all text inputs
                $("input[type='text']").val("");

                // Clear all dropdowns (if using select2)
                $("select").val("").trigger("change");

                // Clear date fields (datepicker)
                $("input[type='date']").val("");

                // Remove validation messages
                $(".field-validation-error").remove();
            });
        });

    </script>

}

@model IDIMWorkBranchProject.Models.WBP.ProjectVm
@{
    ViewBag.Title = "Project";
}

<div id="message"></div>
<div class='col-xs-12'>
    <div class="page-title">
        <div class="pull-left">
            <h1 class="title">Project</h1>
        </div>
        <div class="pull-right hidden-xs">
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.Action("Index","Dashboard")"><i class="fa fa-home"></i>Dashboard</a>
                </li>
                <li>
                    <a href="@Url.Action("List","Project")">
                        <i class="fa fa-list" aria-hidden="true"></i>
                        Project
                    </a>
                </li>
                <li class="active">
                    <strong>Edit</strong>
                </li>
            </ol>
        </div>
    </div>
</div>
<div class="clearfix"></div>

<div class="col-lg-12">
    <section class="box ">
        <header class="panel_header">
            <h2 class="title pull-left">Edit</h2>
            <div class="actions panel_actions pull-right">
                <a href="@Url.Action("Create","Project")" class="btn btn-success">Create New</a>
                <a href="@Url.Action("Delete","Project", new {id=Model.ProjectId})" class="btn btn-danger">Delete</a>
                <a href="@Url.Action("List","Project")" class="btn btn-default">List</a>
                <a class="box_toggle fa fa-chevron-down"></a>
            </div>
        </header>
        <div class="content-body">
            <div class="row">
                <div class="col-xs-12">
                    @using (Html.BeginForm("Edit", "Project", FormMethod.Post, new { @class = "form-horizontal", id = "Project-edit-form", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.ProjectId)

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ProjectTypeId, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.ProjectTypeId, Model.ProjectTypeDropdown, "Select Project Type", new { @class = "select2" })
                                    @Html.ValidationMessageFor(model => model.ProjectTypeId)
                                </div>
                            </div>
                            <div class="form-group col-md-6" id="fiscalYearContainer">
                                @Html.LabelFor(m => m.FiscalYearId, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.FiscalYearId, Model.FiscalYearDropdown, "Select Fiscal Year", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FiscalYearId)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ProjectName, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">

                                    @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProjectName)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.MinistryDepartment, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">

                                    @Html.TextBoxFor(m => m.MinistryDepartment, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MinistryDepartment)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.StartingDate, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    <div class="input-group">
                                        @Html.TextBoxFor(m => m.StartingDate, "{0:dd-MMM-yyyy}", new { @class = "form-control datepicker" })
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.StartingDate)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.EndingDate, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    <div class="input-group">
                                        @Html.TextBoxFor(m => m.EndingDate, "{0:dd-MMM-yyyy}", new { @class = "form-control datepicker" })
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.EndingDate)
                                </div>
                            </div>
                        </div>

                        <div class="row" id="pdDpdContainer">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.PD, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.PD, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PD)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.DPD, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.DPD, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DPD)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.EstimatedExpenses, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.EstimatedExpenses, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EstimatedExpenses)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.NoOfWork, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.NoOfWork, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NoOfWork)
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.EconomicProgress, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.EconomicProgress, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EconomicProgress)
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.ConstructionProgress, new { @class = "col-md-4 form-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.ConstructionProgress, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ConstructionProgress)
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                @Html.LabelFor(m => m.Remarks, new { @class = "col-md-2 form-label" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Remarks)
                                </div>
                            </div>
                        </div>


                        <div class="pull-right">
                            <input type="submit" class="btn btn-success" value="Update" />
                            <input type="reset" class="btn" value="Clear" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            // Initially check if a Project Type is selected and update the visibility
            toggleFieldsBasedOnProjectType();

            // Bind change event to the Project Type dropdown
            $('#ProjectTypeId').change(function () {
                toggleFieldsBasedOnProjectType();
            });
        });

        function toggleFieldsBasedOnProjectType() {
            // Get the selected Project Type value
            var projectType = $('#ProjectTypeId').val();

            // ADPProject = 1, Revenue = 2
            switch (projectType) {
                case '1': // ADPProject
                    // Hide FiscalYear and show PD, DPD
                    $('#fiscalYearContainer').hide();
                    $('#pdDpdContainer').show();
                    $('#PD').prop('required', true);
                    $('#DPD').prop('required', true);
                    $('#FiscalYearId').prop('required', false);
                    break;

                case '2': // Revenue
                    // Show FiscalYear and make it required
                    $('#fiscalYearContainer').show();
                    $('#pdDpdContainer').hide();
                    $('#PD').prop('required', false);
                    $('#DPD').prop('required', false);
                    $('#FiscalYearId').prop('required', true);
                    break;

                default:
                    // Default case, hide both PD/DPD and FiscalYear
                    $('#fiscalYearContainer').hide();
                    $('#pdDpdContainer').hide();
                    break;
            }
        }
    </script>

}
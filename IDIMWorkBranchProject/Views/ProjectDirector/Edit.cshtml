@using IDIMWorkBranchProject.Extentions
@using IDIMWorkBranchProject.Models.Wbpm
@model ProjectDirectorVm

@{
    ViewBag.Title = "Edit";
}

<div class="page-title">
    <div class="pull-left">
        <h3 class="title">প্রকল্প পরিচালক</h3>
    </div>
    <div class="pull-right hidden-xs">
        <ol class="breadcrumb">
            <li>
                <a href="#"><i class="fa fa-home"></i>ড্যাশবোর্ড</a>
            </li>
            <li>
                <a href="@Url.Action("List","ProjectDirector")">
                    <i class="fa fa-list" aria-hidden="true"></i>
                    প্রকল্প পরিচালক
                </a>
            </li>
            <li class="active">
                <strong>সম্পাদনা করুন</strong>
            </li>
        </ol>
    </div>
</div>

<section class="box">
    <header class="panel_header">
        <h2 class="title pull-left">সম্পাদনা করুন</h2>
        <div class="actions panel_actions pull-right">
            <a href="@Url.Action("List","ProjectDirector")" class="btn">
                <i class="fa fa-list" aria-hidden="true"></i>
                তালিকা
            </a>
            <a class="box_toggle fa fa-chevron-down"></a>
        </div>
    </header>
    <div class="content-body">
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm("Edit", "ProjectDirector", FormMethod.Post, new { enctype = "multipart/form-data", id = "Project-create-form", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(x => x.ProjectDirectorId)
                    @Html.HiddenFor(x => x.ADPProjectId)
                    @Html.HiddenFor(x => x.PDDocument)

                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.ProjectDirectorName, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.ProjectDirectorName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectDirectorName)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.ProjectDirectorNameB, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.ProjectDirectorNameB, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectDirectorNameB)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Designation, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.Designation, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Designation)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.DesignationB, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.DesignationB, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DesignationB)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.JoiningDate, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.JoiningDate, "{0:dd-MMM-yyyy}", new { @class = "form-control datepicker" })
                                @Html.ValidationMessageFor(model => model.JoiningDate)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.TransferDate, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.TransferDate, "{0:dd-MMM-yyyy}", new { @class = "form-control datepicker" })
                                @Html.ValidationMessageFor(model => model.TransferDate)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.IsActive, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input" })
                                @Html.ValidationMessageFor(model => model.IsActive)
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.PDDocumentFile, new { @class = "col-md-3 form-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.PDDocumentFile, new { @class = "form-control", type = "file", accept = ".pdf", id = "pdfInput" })
                                @Html.ValidationMessageFor(model => model.PDDocumentFile)
                                @if (!string.IsNullOrEmpty(Model.PDDocument))
                                {
                                    <div class="help-block">
                                        Current file: @Model.PDDocument
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <div id="pdfPreviewContainer" style="height: 500px; border: 1px solid #ccc;">
                                <iframe id="pdfViewer" style="width: 100%; height: 100%;" frameborder="0"></iframe>
                            </div>
                        </div>
                    </div>

                    <div class="pull-right">
                        <input type="submit" class="btn btn-success" value="Save" />
                        <input type="reset" class="btn" value="Clear" />
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section scripts{
    <script>
        $(document).ready(function() {
            // Load existing PDF on page load if available
            @if (!string.IsNullOrEmpty(Model.PDDocument))
            {
                <text>
                var existingPdfUrl = '@Url.Content("~/Documents/ProjectDirectorFiles/" + Model.PDDocument)';
                $('#pdfViewer').attr('src', existingPdfUrl);
                </text>
            }
            else
            {
                <text>
                $('#pdfPreviewContainer').hide();
                </text>
            }

            // Handle new file selection
            $('#pdfInput').change(function(event) {
                var file = event.target.files[0];
                var pdfPreviewContainer = $('#pdfPreviewContainer');
                var pdfViewer = $('#pdfViewer');

                if (file && file.type === 'application/pdf') {
                    var reader = new FileReader();

                    reader.onload = function(e) {
                        pdfViewer.attr('src', e.target.result);
                        pdfPreviewContainer.show();
                    };

                    reader.readAsDataURL(file);
                } else if (file) {
                    alert('Please select a PDF file.');
                    $(this).val('');
                    pdfPreviewContainer.hide();
                } else {
                    // No file selected - show existing PDF if available
                    @if (!string.IsNullOrEmpty(Model.PDDocument))
                    {
                        <text>
                        pdfViewer.attr('src', existingPdfUrl);
                        pdfPreviewContainer.show();
                        </text>
                    }
                    else
                    {
                        <text>
                        pdfPreviewContainer.hide();
                        </text>
                    }
                }
            });
        });
    </script>
}
@using IDIMWorkBranchProject.Extentions
@using IDIMWorkBranchProject.Models.Wbpm
@model RevenuePerformanceSecurityVm

@{
    ViewBag.Title = "Create";
}
<div class="page-title">
    <div class="pull-left">
        <h3 class="title">Create </h3>
    </div>
    <div class="pull-right hidden-xs">
        <ol class="breadcrumb">
            <li>
                <a href="#"><i class="fa fa-home"></i>Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("List","RevenuePerformanceSecurity")">
                    <i class="fa fa-list" aria-hidden="true"></i>
                    RevenuePerformanceSecurity
                </a>
            </li>
            <li class="active">
                <strong>Create</strong>
            </li>
        </ol>
    </div>
</div>

<section class="box">
    <header class="panel_header">
        <h2 class="title pull-left">রাজস্ব ব্যাংক গ্যারান্টি/পারফরমেন্স সিকিউরিটি সংযুক্ত করুন</h2>
        <div class="actions panel_actions pull-right">
            <a href="@Url.Action("List","RevenuePerformanceSecurity")" class="btn">
                <i class="fa fa-list" aria-hidden="true"></i>
                List
            </a>
            <a class="box_toggle fa fa-chevron-down"></a>
        </div>
    </header>
    <div class="content-body">
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm("Create", "RevenuePerformanceSecurity", FormMethod.Post, new { enctype = "multipart/form-data", id = "RevenuePerformanceSecurity-create-form", role = "form" }))
                {
                    @Html.AntiForgeryToken()                    
                    @Html.HiddenFor(x => x.RevenueId)
                    @Html.HiddenFor(x => x.RevenuePerformanceSecurityId)
                    @Html.HiddenFor(x => x.RevenuePerformanceSecurityScanDocument)


                    <div class="row">
                        <div class="form-display col-md-12">
                            @Html.LabelFor(m => m.RevenueWorkTitleB, new { @class = "form-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.RevenueWorkTitleB, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.RevenuePerformanceSecuritySubmissionDate, new { @class = "col-md-4 form-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.RevenuePerformanceSecuritySubmissionDate, "{0:dd-MMM-yyyy}", new { @class = "form-control datepicker" })
                                @Html.ValidationMessageFor(model => model.RevenuePerformanceSecuritySubmissionDate)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.RevenuePerformanceSecurityExpiryDate, new { @class = "col-md-4 form-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.RevenuePerformanceSecurityExpiryDate, "{0:dd-MMM-yyyy}", new { @class = "form-control datepicker" })
                                @Html.ValidationMessageFor(model => model.RevenuePerformanceSecurityExpiryDate)
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            @Html.LabelFor(m => m.DocumentFile, new { @class = "col-md-2 form-label" })
                            <div class="col-md-9">
                                @if (!string.IsNullOrEmpty(Model.RevenuePerformanceSecurityScanDocument))
                                {
                                    <!-- PDF Preview Section -->
                                    <embed id="pdfPreview"
                                           src="@(!string.IsNullOrEmpty(Model.RevenuePerformanceSecurityScanDocument) ? Url.Content("~/Documents/RevenuePerformanceSecurityFiles/" + Model.RevenuePerformanceSecurityScanDocument) : "")"
                                           type="application/pdf"
                                           width="100" height="100" />
                                    <p>
                                        <a id="pdfLink" href="@Url.Content("~/Documents/RevenuePerformanceSecurityFiles/" + Model.RevenuePerformanceSecurityScanDocument)" target="_blank">
                                            View Full PDF
                                        </a>
                                    </p>
                                }
                                @Html.TextBoxFor(m => m.DocumentFile, new { @class = "form-control", type = "file", accept = ".pdf", id = "pdfInput", onchange = "previewPDF(event)" })
                                @Html.ValidationMessageFor(model => model.DocumentFile)


                            </div>
                        </div>
                    </div>

                    <div class="pull-right">
                        <input type="submit" class="btn btn-success" value="Save" />
                        <input type="reset" class="btn" value="Clear" />
                    </div>
                }
            </div>
        </div>
    </div>
</section>
@section scripts{
    <script>
            function previewPDF(event) {
                var file = event.target.files[0];
                if (file)
                {
                    var fileURL = URL.createObjectURL(file);
                    document.getElementById('pdfPreview').src = fileURL;
                    document.getElementById('pdfLink').href = fileURL;
                }
            }
    </script>
}
